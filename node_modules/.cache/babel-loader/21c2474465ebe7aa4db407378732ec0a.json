{"ast":null,"code":"import _slicedToArray from\"/Users/narektsaturyan/Documents/GitHub/Testing/MovieApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{searchMovie}from\"../utilis/Api\";import Movies from\"./movies\";import LoadingBar from\"./common/loadingBar\";import PageButtons from\"./common/pageButtons\";function SearchPage(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),heading=_useState4[0],setHeading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),totalPages=_useState8[0],setTotalPages=_useState8[1];var _useState9=useState(1),_useState10=_slicedToArray(_useState9,2),activePage=_useState10[0],setActivePage=_useState10[1];useEffect(function(){if(props.match.params.query){var query=props.match.params.query;setIsLoading(true);searchMovie(query,activePage).then(function(res){setHeading(res.total_results.toString()+\" Movies Found\");setTotalPages(res.total_pages);setMovies(res.results);setIsLoading(false);});}},[activePage,props.match.params]);var pageChange=function pageChange(btn){if(btn===\"next\"){setActivePage(function(page){return page+1;});}else if(btn===\"back\"){setActivePage(function(page){return page-1;});}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{maxWidth:1146},className:\"container-fluid mt-5\"},/*#__PURE__*/React.createElement(Movies,{heading:heading,movies:movies}),isLoading?/*#__PURE__*/React.createElement(LoadingBar,null):null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(PageButtons,{pageChange:pageChange,activePage:activePage,totalPages:totalPages}))));}export default SearchPage;","map":{"version":3,"sources":["/Users/narektsaturyan/Documents/GitHub/Testing/MovieApp/src/components/searchPage.jsx"],"names":["React","useState","useEffect","searchMovie","Movies","LoadingBar","PageButtons","SearchPage","props","movies","setMovies","heading","setHeading","isLoading","setIsLoading","totalPages","setTotalPages","activePage","setActivePage","match","params","query","then","res","total_results","toString","total_pages","results","pageChange","btn","page","maxWidth"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,eACGP,QAAQ,CAAC,EAAD,CADX,wCAClBQ,MADkB,eACVC,SADU,8BAEKT,QAAQ,CAAC,EAAD,CAFb,yCAElBU,OAFkB,eAETC,UAFS,8BAGSX,QAAQ,CAAC,KAAD,CAHjB,yCAGlBY,SAHkB,eAGPC,YAHO,8BAIWb,QAAQ,CAAC,CAAD,CAJnB,yCAIlBc,UAJkB,eAINC,aAJM,8BAKWf,QAAQ,CAAC,CAAD,CALnB,0CAKlBgB,UALkB,gBAKNC,aALM,gBAOzBhB,SAAS,CAAC,UAAM,CACd,GAAIM,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBC,KAAvB,CAA8B,IACpBA,CAAAA,KADoB,CACVb,KAAK,CAACW,KAAN,CAAYC,MADF,CACpBC,KADoB,CAE5BP,YAAY,CAAC,IAAD,CAAZ,CACAX,WAAW,CAACkB,KAAD,CAAQJ,UAAR,CAAX,CAA+BK,IAA/B,CAAoC,SAAAC,GAAG,CAAI,CACzCX,UAAU,CAACW,GAAG,CAACC,aAAJ,CAAkBC,QAAlB,GAA+B,eAAhC,CAAV,CACAT,aAAa,CAACO,GAAG,CAACG,WAAL,CAAb,CACAhB,SAAS,CAACa,GAAG,CAACI,OAAL,CAAT,CACAb,YAAY,CAAC,KAAD,CAAZ,CACD,CALD,EAMD,CACF,CAXQ,CAWN,CAACG,UAAD,CAAaT,KAAK,CAACW,KAAN,CAAYC,MAAzB,CAXM,CAAT,CAaA,GAAMQ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,GAAG,CAAI,CACxB,GAAIA,GAAG,GAAK,MAAZ,CAAoB,CAClBX,aAAa,CAAC,SAAAY,IAAI,QAAIA,CAAAA,IAAI,CAAG,CAAX,EAAL,CAAb,CACD,CAFD,IAEO,IAAID,GAAG,GAAK,MAAZ,CAAoB,CACzBX,aAAa,CAAC,SAAAY,IAAI,QAAIA,CAAAA,IAAI,CAAG,CAAX,EAAL,CAAb,CACD,CACF,CAND,CAQA,mBACE,qDACE,2BAAK,KAAK,CAAE,CAAEC,QAAQ,CAAE,IAAZ,CAAZ,CAAgC,SAAS,CAAC,sBAA1C,eACE,oBAAC,MAAD,EAAQ,OAAO,CAAEpB,OAAjB,CAA0B,MAAM,CAAEF,MAAlC,EADF,CAEGI,SAAS,cAAG,oBAAC,UAAD,MAAH,CAAoB,IAFhC,cAGE,4CACE,oBAAC,WAAD,EACE,UAAU,CAAEe,UADd,CAEE,UAAU,CAAEX,UAFd,CAGE,UAAU,CAAEF,UAHd,EADF,CAHF,CADF,CADF,CAeD,CAED,cAAeR,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { searchMovie } from \"../utilis/Api\";\nimport Movies from \"./movies\";\nimport LoadingBar from \"./common/loadingBar\";\nimport PageButtons from \"./common/pageButtons\";\n\nfunction SearchPage(props) {\n  const [movies, setMovies] = useState([]);\n  const [heading, setHeading] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [activePage, setActivePage] = useState(1);\n\n  useEffect(() => {\n    if (props.match.params.query) {\n      const { query } = props.match.params;\n      setIsLoading(true);\n      searchMovie(query, activePage).then(res => {\n        setHeading(res.total_results.toString() + \" Movies Found\");\n        setTotalPages(res.total_pages);\n        setMovies(res.results);\n        setIsLoading(false);\n      });\n    }\n  }, [activePage, props.match.params]);\n\n  const pageChange = btn => {\n    if (btn === \"next\") {\n      setActivePage(page => page + 1);\n    } else if (btn === \"back\") {\n      setActivePage(page => page - 1);\n    }\n  };\n\n  return (\n    <>\n      <div style={{ maxWidth: 1146 }} className=\"container-fluid mt-5\">\n        <Movies heading={heading} movies={movies} />\n        {isLoading ? <LoadingBar /> : null}\n        <div>\n          <PageButtons\n            pageChange={pageChange}\n            activePage={activePage}\n            totalPages={totalPages}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}